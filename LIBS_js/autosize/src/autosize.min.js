const map="function"==typeof Map?new Map:function(){const e=[],t=[];return{has:t=>e.indexOf(t)>-1,get:o=>t[e.indexOf(o)],set(o,n){-1===e.indexOf(o)&&(e.push(o),t.push(n))},delete(o){const n=e.indexOf(o);n>-1&&(e.splice(n,1),t.splice(n,1))}}}();let createEvent=e=>new Event(e,{bubbles:!0});try{new Event("test")}catch(e){createEvent=(e=>{const t=document.createEvent("Event");return t.initEvent(e,!0,!1),t})}function assign(e){if(!e||!e.nodeName||"TEXTAREA"!==e.nodeName||map.has(e))return;let t=null,o=null,n=null;function r(t){{const t=e.style.width;e.style.width="0px",e.offsetWidth,e.style.width=t}e.style.overflowY=t}function i(){if(0===e.scrollHeight)return;const n=function(e){const t=[];for(;e&&e.parentNode&&e.parentNode instanceof Element;)e.parentNode.scrollTop&&t.push({node:e.parentNode,scrollTop:e.parentNode.scrollTop}),e=e.parentNode;return t}(e),r=document.documentElement&&document.documentElement.scrollTop;e.style.height="",e.style.height=e.scrollHeight+t+"px",o=e.clientWidth,n.forEach(e=>{e.node.scrollTop=e.scrollTop}),r&&(document.documentElement.scrollTop=r)}function s(){i();const t=Math.round(parseFloat(e.style.height)),o=window.getComputedStyle(e,null);var s="content-box"===o.boxSizing?Math.round(parseFloat(o.height)):e.offsetHeight;if(s<t?"hidden"===o.overflowY&&(r("scroll"),i(),s="content-box"===o.boxSizing?Math.round(parseFloat(window.getComputedStyle(e,null).height)):e.offsetHeight):"hidden"!==o.overflowY&&(r("hidden"),i(),s="content-box"===o.boxSizing?Math.round(parseFloat(window.getComputedStyle(e,null).height)):e.offsetHeight),n!==s){n=s;const t=createEvent("autosize:resized");try{e.dispatchEvent(t)}catch(e){}}}const l=()=>{e.clientWidth!==o&&s()},d=(t=>{window.removeEventListener("resize",l,!1),e.removeEventListener("input",s,!1),e.removeEventListener("keyup",s,!1),e.removeEventListener("autosize:destroy",d,!1),e.removeEventListener("autosize:update",s,!1),Object.keys(t).forEach(o=>{e.style[o]=t[o]}),map.delete(e)}).bind(e,{height:e.style.height,resize:e.style.resize,overflowY:e.style.overflowY,overflowX:e.style.overflowX,wordWrap:e.style.wordWrap});e.addEventListener("autosize:destroy",d,!1),"onpropertychange"in e&&"oninput"in e&&e.addEventListener("keyup",s,!1),window.addEventListener("resize",l,!1),e.addEventListener("input",s,!1),e.addEventListener("autosize:update",s,!1),e.style.overflowX="hidden",e.style.wordWrap="break-word",map.set(e,{destroy:d,update:s}),function(){const o=window.getComputedStyle(e,null);"vertical"===o.resize?e.style.resize="none":"both"===o.resize&&(e.style.resize="horizontal"),t="content-box"===o.boxSizing?-(parseFloat(o.paddingTop)+parseFloat(o.paddingBottom)):parseFloat(o.borderTopWidth)+parseFloat(o.borderBottomWidth),isNaN(t)&&(t=0),s()}()}function destroy(e){const t=map.get(e);t&&t.destroy()}function update(e){const t=map.get(e);t&&t.update()}let autosize=null;"undefined"==typeof window||"function"!=typeof window.getComputedStyle?((autosize=(e=>e)).destroy=(e=>e),autosize.update=(e=>e)):((autosize=((e,t)=>(e&&Array.prototype.forEach.call(e.length?e:[e],e=>assign(e,t)),e))).destroy=(e=>(e&&Array.prototype.forEach.call(e.length?e:[e],destroy),e)),autosize.update=(e=>(e&&Array.prototype.forEach.call(e.length?e:[e],update),e)));export default autosize;
